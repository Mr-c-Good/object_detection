#############################################################################
# Generated by PAGE version 4.16
# in conjunction with Tcl version 8.6
# Aug 29, 2018 10:53:54 AM IST  platform: Linux
set vTcl(timestamp) ""


if {!$vTcl(borrow)} {

vTcl:font:add_GUI_font TkDefaultFont \
"-family sans-serif -size -12 -weight normal -slant roman -underline 0 -overstrike 0"
vTcl:font:add_GUI_font TkFixedFont \
"-family monospace -size -12 -weight normal -slant roman -underline 0 -overstrike 0"
vTcl:font:add_GUI_font TkMenuFont \
"-family sans-serif -size -12 -weight normal -slant roman -underline 0 -overstrike 0"
vTcl:font:add_GUI_font TkTextFont \
"-family sans-serif -size -12 -weight normal -slant roman -underline 0 -overstrike 0"
set vTcl(actual_gui_bg) #d9d9d9
set vTcl(actual_gui_fg) #000000
set vTcl(actual_gui_menu_bg) #d9d9d9
set vTcl(actual_gui_menu_fg) #000000
set vTcl(complement_color) #d9d9d9
set vTcl(analog_color_p) #d9d9d9
set vTcl(analog_color_m) #d9d9d9
set vTcl(active_fg) #000000
set vTcl(actual_gui_menu_active_bg)  #d8d8d8
set vTcl(active_menu_fg) #000000
}

#################################
#LIBRARY PROCEDURES
#


if {[info exists vTcl(sourcing)]} {

proc vTcl:project:info {} {
    set base .top39
    global vTcl
    set base $vTcl(btop)
    if {$base == ""} {
        set base .top39
    }
    namespace eval ::widgets::$base {
        set dflt,origin 0
        set runvisible 1
    }
    namespace eval ::widgets_bindings {
        set tagslist _TopLevel
    }
    namespace eval ::vTcl::modules::main {
        set procs {
        }
        set compounds {
        }
        set projectType single
    }
}
}

#################################
# GENERATED GUI PROCEDURES
#

proc vTclWindow.top39 {base} {
    if {$base == ""} {
        set base .top39
    }
    if {[winfo exists $base]} {
        wm deiconify $base; return
    }
    set top $base
    ###################
    # CREATING WIDGETS
    ###################
    vTcl::widgets::core::toplevel::createCmd $top -class Toplevel \
        -background {#d9d9d9} -highlightcolor black 
    wm focusmodel $top passive
    wm geometry $top 600x450+480+95
    update
    # set in toplevel.wgt.
    global vTcl
    global img_list
    set vTcl(save,dflt,origin) 0
    wm maxsize $top 1351 738
    wm minsize $top 1 1
    wm overrideredirect $top 0
    wm resizable $top 1 1
    wm deiconify $top
    wm title $top "New Toplevel"
    vTcl:DefineAlias "$top" "mainwindow" vTcl:Toplevel:WidgetProc "" 1
    frame $top.fra40 \
        -borderwidth 2 -relief groove -background {#d9d9d9} -height 45 \
        -highlightcolor black -width 575 
    vTcl:DefineAlias "$top.fra40" "buttonpane" vTcl:WidgetProc "mainwindow" 1
    set site_3_0 $top.fra40
    button $site_3_0.but41 \
        -activebackground {#d9d9d9} -activeforeground black \
        -background {#d9d9d9} -command on_set_video_source \
        -foreground {#000000} -highlightcolor black -text {Set Video Source} 
    vTcl:DefineAlias "$site_3_0.but41" "set_source_button" vTcl:WidgetProc "mainwindow" 1
    button $site_3_0.but43 \
        -activebackground {#d9d9d9} -activeforeground black \
        -background {#d9d9d9} -command on_load_model -foreground {#000000} \
        -highlightcolor black -text {Load Model} 
    vTcl:DefineAlias "$site_3_0.but43" "load_model_button" vTcl:WidgetProc "mainwindow" 1
    button $site_3_0.but44 \
        -activebackground {#d9d9d9} -activeforeground black \
        -background {#d9d9d9} -command on_start -foreground {#000000} \
        -highlightcolor black -text Start 
    vTcl:DefineAlias "$site_3_0.but44" "start_button" vTcl:WidgetProc "mainwindow" 1
    button $site_3_0.but40 \
        -activebackground {#d9d9d9} -activeforeground black \
        -background {#d9d9d9} -command on_stop -foreground {#000000} \
        -highlightcolor black -text Stop 
    vTcl:DefineAlias "$site_3_0.but40" "stop_button" vTcl:WidgetProc "mainwindow" 1
    place $site_3_0.but41 \
        -in $site_3_0 -x 10 -y 10 -anchor nw -bordermode ignore 
    place $site_3_0.but43 \
        -in $site_3_0 -x 140 -y 10 -anchor nw -bordermode ignore 
    place $site_3_0.but44 \
        -in $site_3_0 -x 240 -y 10 -anchor nw -bordermode ignore 
    place $site_3_0.but40 \
        -in $site_3_0 -x 290 -y 10 -anchor nw -bordermode ignore 
    frame $top.fra45 \
        -borderwidth 2 -relief groove -background {#d9d9d9} -height 375 \
        -highlightcolor black -width 575 
    vTcl:DefineAlias "$top.fra45" "playbackpane" vTcl:WidgetProc "mainwindow" 1
    set site_3_0 $top.fra45
    canvas $site_3_0.can40 \
        -background {#d9d9d9} -borderwidth 2 -closeenough 1.0 -height 371 \
        -insertbackground black -relief ridge -selectbackground {#c4c4c4} \
        -selectforeground black -width 561 
    vTcl:DefineAlias "$site_3_0.can40" "playbackcanvas" vTcl:WidgetProc "mainwindow" 1
    place $site_3_0.can40 \
        -in $site_3_0 -x 10 -y 0 -width 561 -relwidth 0 -height 371 \
        -relheight 0 -anchor nw -bordermode ignore 
    ###################
    # SETTING GEOMETRY
    ###################
    place $top.fra40 \
        -in $top -x 10 -y 10 -width 575 -relwidth 0 -height 45 -relheight 0 \
        -anchor nw -bordermode ignore 
    place $top.fra45 \
        -in $top -x 10 -y 60 -width 575 -relwidth 0 -height 375 -relheight 0 \
        -anchor nw -bordermode ignore 

    vTcl:FireEvent $base <<Ready>>
}

#############################################################################
## Binding tag:  _TopLevel

bind "_TopLevel" <<Create>> {
    if {![info exists _topcount]} {set _topcount 0}; incr _topcount
}
bind "_TopLevel" <<DeleteWindow>> {
    if {[set ::%W::_modal]} {
                vTcl:Toplevel:WidgetProc %W endmodal
            } else {
                destroy %W; if {$_topcount == 0} {exit}
            }
}
bind "_TopLevel" <Destroy> {
    if {[winfo toplevel %W] == "%W"} {incr _topcount -1}
}

set btop ""
if {$vTcl(borrow)} {
    set btop .bor[expr int([expr rand() * 100])]
    while {[lsearch $btop $vTcl(tops)] != -1} {
        set btop .bor[expr int([expr rand() * 100])]
    }
}
set vTcl(btop) $btop
Window show .
Window show .top39 $btop
if {$vTcl(borrow)} {
    $btop configure -background plum
}

